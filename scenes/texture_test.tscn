[gd_scene load_steps=7 format=3 uid="uid://djvuu3dhsqt48"]

[ext_resource type="Texture2D" uid="uid://hrq5o27nadov" path="res://textures/terrain/breakstone/T_breakstone_basecolor.png" id="2_o7s6v"]
[ext_resource type="Texture2D" uid="uid://cy7cmvhhpg15n" path="res://textures/terrain/breakstone/T_breakstone_normal.png" id="3_207s6"]
[ext_resource type="Texture2D" uid="uid://1j1rg5105tqf" path="res://textures/terrain/breakstone/T_breakstone_roughness.png" id="4_3v2ql"]

[sub_resource type="SphereMesh" id="SphereMesh_ifce8"]

[sub_resource type="Shader" id="Shader_ydfpr"]
code = "shader_type spatial;

uniform sampler2D albedo_textures[4];
uniform sampler2D normal_textures[4];
uniform sampler2D roughness_textures[4];

varying vec4 splat_weights;

void vertex() {
    splat_weights = COLOR;
}

void fragment() {
    vec3 albedo = vec3(0.0);
    vec3 normal = vec3(0.0);
    float roughness = 0.0;

    albedo += texture(albedo_textures[0], UV).rgb * splat_weights.r;
    albedo += texture(albedo_textures[1], UV).rgb * splat_weights.g;
    albedo += texture(albedo_textures[2], UV).rgb * splat_weights.b;
    albedo += texture(albedo_textures[3], UV).rgb * splat_weights.a;

    vec3 normal_map = vec3(0.0);
    normal_map += texture(normal_textures[0], UV).rgb * splat_weights.r;
    normal_map += texture(normal_textures[1], UV).rgb * splat_weights.g;
    normal_map += texture(normal_textures[2], UV).rgb * splat_weights.b;
    normal_map += texture(normal_textures[3], UV).rgb * splat_weights.a;

    roughness += texture(roughness_textures[0], UV).r * splat_weights.r;
    roughness += texture(roughness_textures[1], UV).r * splat_weights.g;
    roughness += texture(roughness_textures[2], UV).r * splat_weights.b;
    roughness += texture(roughness_textures[3], UV).r * splat_weights.a;

    ALBEDO = albedo;
    NORMAL_MAP = normal_map;
    ROUGHNESS = roughness;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ydfpr"]
render_priority = 0
shader = SubResource("Shader_ydfpr")
shader_parameter/albedo_textures = Array[Texture2D]([ExtResource("2_o7s6v")])
shader_parameter/normal_textures = Array[Texture2D]([ExtResource("3_207s6")])
shader_parameter/roughness_textures = Array[Texture2D]([ExtResource("4_3v2ql")])

[node name="TextureTest" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_ifce8")
surface_material_override/0 = SubResource("ShaderMaterial_ydfpr")
